#用root用户登录数据库。

mysql -u root -p	

drop database if exists runoob;	#删除数据库
create database runoob;	#创建数据库
use runoob;	#使用数据库

drop table if exists `runoob_tbl`;
CREATE TABLE IF NOT EXISTS `runoob_tbl`(
   `runoob_id` INT UNSIGNED AUTO_INCREMENT,
   `runoob_title` VARCHAR(100) NOT NULL,
   `runoob_author` VARCHAR(40) NOT NULL,
   `submission_date` DATE,
   PRIMARY KEY ( `runoob_id` )
)ENGINE=InnoDB DEFAULT CHARSET=utf8;	#创建数据表


drop table if exists `logs`;
CREATE TABLE IF NOT EXISTS `logs`(
   `log_id` INT UNSIGNED AUTO_INCREMENT,
   `log_text` VARCHAR(100) NOT NULL,
   `log_datetime` DATETIME,
   PRIMARY KEY ( `log_id` )
);

# 创建2个插入触发器
DELIMITER $ 

# 插入runoob_tbl之前触发，在logs中插入数据
drop trigger if exists bi;
create trigger `bi` before insert on runoob_tbl for each row
begin
    insert into logs (log_text, log_datetime) values ("BEFORE INSERT TRIGGER!", now());
end$

# 插入runoob_tbl之后触发，在logs中插入数据
drop trigger if exists ai;
create trigger `ai` after insert on runoob_tbl for each row
begin
    insert into logs (log_text, log_datetime) values ("AFTER INSERT TRIGGER!", now());
end$
DELIMITER ;


############## 从这里开始逐条语句执行 ####################
INSERT INTO runoob_tbl (runoob_title, runoob_author, submission_date)  VALUES ("php_learning", "tongji", NOW());         #插入一条数据
select * from runoob_tbl;               #查询数据表
select * from logs;

INSERT INTO runoob_tbl  (runoob_title, runoob_author, submission_date)  VALUES   ("python_learning", "tongji", NOW());        #插入一条数据
select * from runoob_tbl;               #查询数据表
select * from logs;


#  创建触发器，插入runoob_tbl中记录之前触发，如果插入的runoob_title ='mysql' 那么修改为'BEFORE INSERT TRIGGER'
DELIMITER $ 
drop trigger if exists bi;
create trigger `bi` before insert on runoob_tbl for each row
begin
    IF new.runoob_title ='mysql' THEN
           set new.runoob_title='BEFORE INSERT TRIGGER';
    END IF;
end$
DELIMITER ;

select * from runoob_tbl;
INSERT INTO runoob_tbl  (runoob_title, runoob_author, submission_date)  VALUES   ("mysql", "tongji", NOW());        #插入一条数据
select * from runoob_tbl;

#  创建触发器，删除runoob_tbl中记录之前触发，插入一条记录，触发器中不能对触发的表进行操作。
DELIMITER $ 
drop trigger if exists bd;
create trigger `bd` before delete on runoob_tbl for each row
begin
    INSERT INTO runoob_tbl  (runoob_title, runoob_author, submission_date)  VALUES   ("python_learning", "tongji", NOW());        #插入一条数据，触发器中不能对触发的表进行操作。
end$
DELIMITER ;

select * from runoob_tbl; 
delete from runoob_tbl where runoob_title="python_learning";  #执行此条命令出错，触发器中有对触发的表进行操作。
select * from runoob_tbl; 

